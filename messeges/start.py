from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackContext

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /start"""
    welcome_text = (
        "‚ùóÔ∏è–ü–µ—Ä–µ–¥ —Ç–∏–º —è–∫ –ø–æ—á–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º –≤–∏ –ø–æ–≤–∏–Ω–Ω—ñ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å—å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç"
    )
    keyboard = [
        [InlineKeyboardButton("–ü–∞–Ω –ú–µ–º–∞—Å—é–∫", url="https://t.me/memasyk_ua")],
        [InlineKeyboardButton("JuiceProjects", url="https://t.me/Juice_Project_News")],
        [InlineKeyboardButton("–°–ø–æ–Ω—Å–æ—Ä", url="https://t.me/kittyverse_ai_bot/play?startapp=u1310633045")],
        [InlineKeyboardButton("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏", callback_data="check_subscriptions")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    with open("messeges/banner.png", "rb") as banner:
        await update.message.reply_photo(
            photo=banner,
            caption=welcome_text,
            reply_markup=reply_markup
        )
    context.user_data["subscription_checked"] = False

async def button_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏'"""
    query = update.callback_query
    await query.answer()

    if context.user_data.get("subscription_checked", False):
        user_name = query.from_user.first_name
        success_text = (
            f"–ü—Ä–∏–≤—ñ—Ç {user_name} üëã\n"
            "–Ø JuiceSave, –ø—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ TikTok –≤—ñ–¥–µ–æ "
            "—ñ —è –∑–∞–≤–∞–Ω—Ç–∞–∂—É –π–æ–≥–æ –¥–ª—è —Ç–µ–±–µ —É –Ω–∞–π–∫—Ä–∞—â—ñ–π —è–∫–æ—Å—Ç—ñ"
        )
        with open("messeges/banner.png", "rb") as banner:
            await query.message.reply_photo(
                photo=banner,
                caption=success_text
            )
    else:
        fail_text = "üö´ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ —É—Å–ø—ñ—à–Ω–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å—å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç"
        await query.message.reply_text(fail_text)

        welcome_text = (
            "‚ùóÔ∏è–ü–µ—Ä–µ–¥ —Ç–∏–º —è–∫ –ø–æ—á–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º –≤–∏ –ø–æ–≤–∏–Ω–Ω—ñ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å—å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç"
        )
        keyboard = [
            [InlineKeyboardButton("–ü–∞–Ω –ú–µ–º–∞—Å—é–∫", url="https://t.me/memasyk_ua")],
            [InlineKeyboardButton("JuiceProjects", url="https://t.me/Juice_Project_Newshttps://t.me/sponsor2")],
            [InlineKeyboardButton("–°–ø–æ–Ω—Å–æ—Ä", url="https://t.me/kittyverse_ai_bot/play?startapp=u1310633045")],
            [InlineKeyboardButton("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏", callback_data="check_subscriptions")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        with open("messeges/banner.png", "rb") as banner:
            await query.message.reply_photo(
                photo=banner,
                caption=welcome_text,
                reply_markup=reply_markup
            )
        context.user_data["subscription_checked"] = True
